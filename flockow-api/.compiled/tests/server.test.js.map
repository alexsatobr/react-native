{"version":3,"sources":["../../src/tests/server.test.js"],"names":["expect","require","request","ObjectID","app","Todo","User","todos","populateTodos","users","populateUsers","beforeEach","describe","it","done","text","post","set","tokens","token","send","res","body","toBe","end","err","find","then","length","catch","e","get","_id","toHexString","todo","hexId","delete","findById","toBeFalsy","toBeTruthy","patch","completed","completedAt","email","toEqual","password","headers","findOne","user","not","toObject","toMatchObject","access"],"mappings":"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","sourcesContent":["const expect = require('expect');\nconst request = require('supertest');\nconst {ObjectID} = require('mongodb');\n\nconst {app} = require('./../server');\nconst {Todo} = require('./../models/todo');\nconst {User} = require('./../models/user');\nconst {todos, populateTodos, users, populateUsers} = require('./seed/seed');\n\nbeforeEach(populateUsers);\nbeforeEach(populateTodos);\n\ndescribe('POST /todos', () => {\n\tit('should create a new todo', (done) => {\n\t\tconst text = 'Test todo text';\n\n\t\trequest(app)\n\t\t\t.post('/todos')\n\t\t\t.set('x-auth', users[0].tokens[0].token)\n\t\t\t.send({text})\n\t\t\t.expect(200)\n\t\t\t.expect((res) => {\n\t\t\t\texpect(res.body.text).toBe(text);\n\t\t\t})\n\t\t\t.end((err, res) => {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn done(err);\n\t\t\t\t}\n\t\t\t\tTodo.find({text}).then((todos) => {\n\t\t\t\t\texpect(todos.length).toBe(1);\n\t\t\t\t\texpect(todos[0].text).toBe(text);\n\t\t\t\t\tdone();\n\t\t\t\t}).catch((e) => done(e));\n\t\t\t});\n\t});\n\n\tit('should not create todo with invalid body data', (done) => {\n\t\trequest(app)\n\t\t\t.post('/todos')\n\t\t\t.set('x-auth', users[0].tokens[0].token)\n\t\t\t.send({})\n\t\t\t.expect(400)\n\t\t\t.end((err, res) => {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn done(err);\n\t\t\t\t}\n\n\t\t\t\tTodo.find().then((todos) => {\n\t\t\t\t\texpect(todos.length).toBe(2);\n\t\t\t\t\tdone();\n\t\t\t\t}).catch((e) => done(e));\n\t\t\t});\n\t});\n});\n\ndescribe('GET /todos',() => {\n\tit('should get all todos', (done) => {\n\t\trequest(app)\n\t\t\t.get('/todos')\n\t\t\t.set('x-auth', users[0].tokens[0].token)\n\t\t\t.expect(200)\n\t\t\t.expect((res) => {\n\t\t\t\texpect(res.body.todos.length).toBe(1);\n\t\t\t})\n\t\t\t.end(done);\n\t});\n});\n\ndescribe('GET /todos/:id',() => {\n\tit('should return todo doc', (done) => {\n\t\trequest(app)\n\t\t\t.get(`/todos/${todos[0]._id.toHexString()}`)\n\t\t\t.set('x-auth', users[0].tokens[0].token)\n\t\t\t.expect(200)\n\t\t\t.expect((res) => {\n\t\t\t\texpect(res.body.todo.text).toBe(todos[0].text);\n\t\t\t})\n\t\t\t.end(done);\n\t});\n\tit('should not return todo doc created by other user', (done) => {\n\t\trequest(app)\n\t\t\t.get(`/todos/${todos[1]._id.toHexString()}`)\n\t\t\t.set('x-auth', users[0].tokens[0].token)\n\t\t\t.expect(404)\n\t\t\t.end(done);\n\t});\n\tit('should return 404 if todo not found', (done) => {\n\t\tconst hexId = new ObjectID().toHexString();\n\t\trequest(app)\n\t\t\t.get(`/todos/${hexId}`)\n\t\t\t.set('x-auth', users[0].tokens[0].token)\n\t\t\t.expect(404)\n\t\t\t.end(done);\n\t});\n\n\tit('should return 404 for non-object ids', (done) => {\n\t\trequest(app)\n\t\t\t.get('/todos/123abc')\n\t\t\t.set('x-auth', users[0].tokens[0].token)\n\t\t\t.expect(404)\n\t\t\t.end(done);\n\t});\n});\n\ndescribe('DELETE /todos/:id',() => {\n\tit('should remove a todo', (done) => {\n\t\tconst hexId = todos[1]._id.toHexString();\n\t\trequest(app)\n\t\t\t.delete(`/todos/${hexId}`)\n\t\t\t.set('x-auth', users[1].tokens[0].token)\n\t\t\t.expect(200)\n\t\t\t.expect((res) => {\n\t\t\t\texpect(res.body.todo._id).toBe(hexId);\n\t\t\t})\n\t\t\t.end((err, res) => {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn done(err);\n\t\t\t\t}\n\t\t\t\tTodo.findById(hexId).then((todo) => {\n\t\t\t\t\texpect(todo).toBeFalsy();\n\t\t\t\t\tdone();\n\t\t\t\t}).catch((e) => done(e));\n\t\t\t});\n\t});\n\tit('should remove a todo', (done) => {\n\t\tconst hexId = todos[0]._id.toHexString();\n\t\trequest(app)\n\t\t\t.delete(`/todos/${hexId}`)\n\t\t\t.set('x-auth', users[1].tokens[0].token)\n\t\t\t.expect(404)\n\t\t\t.end((err, res) => {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn done(err);\n\t\t\t\t}\n\t\t\t\tTodo.findById(hexId).then((todo) => {\n\t\t\t\t\texpect(todo).toBeTruthy();\n\t\t\t\t\tdone();\n\t\t\t\t}).catch((e) => done(e));\n\t\t\t});\n\t});\n\tit('should return 404 if todo not found', (done) => {\n\t\tconst hexId = new ObjectID().toHexString();\n\t\trequest(app)\n\t\t\t.get(`/todos/${hexId}`)\n\t\t\t.set('x-auth', users[1].tokens[0].token)\n\t\t\t.expect(404)\n\t\t\t.end(done);\n\t});\n\tit('should return 404 for object id is invalid', (done) => {\n\t\trequest(app)\n\t\t\t.delete('/todos/123abc')\n\t\t\t.set('x-auth', users[1].tokens[0].token)\n\t\t\t.expect(404)\n\t\t\t.end(done);\n\t});\n});\n\ndescribe('PATCH /todos/:id', () => {\n\tit('should update the todo', (done) => {\n\t\tconst hexId = todos[0]._id.toHexString();\n\t\tconst text = 'This should be the new text';\n\t\trequest(app)\n\t\t\t.patch(`/todos/${hexId}`)\n\t\t\t.set('x-auth', users[0].tokens[0].token)\n\t\t\t.send({\n\t\t\t\tcompleted: true,\n\t\t\t\ttext\n\t\t\t})\n\t\t\t.expect(200)\n\t\t\t.expect((res) => {\n\t\t\t\texpect(res.body.todo.text).toBe(text);\n\t\t\t\texpect(res.body.todo.completed).toBe(true);\n\t\t\t\texpect(typeof res.body.todo.completedAt).toBe('number');\n\t\t\t})\n\t\t\t.end(done);\n\t});\n\tit('should not update the todo created by other user', (done) => {\n\t\tconst hexId = todos[0]._id.toHexString();\n\t\tconst text = 'This should be the new text';\n\t\trequest(app)\n\t\t\t.patch(`/todos/${hexId}`)\n\t\t\t.set('x-auth', users[1].tokens[0].token)\n\t\t\t.send({\n\t\t\t\tcompleted: true,\n\t\t\t\ttext\n\t\t\t})\n\t\t\t.expect(404)\n\t\t\t.end(done);\n\t});\n\n\tit('should clear completedAt when todo is not completed', (done) => {\n\t\tconst hexId = todos[1]._id.toHexString();\n\t\tconst text = 'This should be the new text!!';\n\t\trequest(app)\n\t\t\t.patch(`/todos/${hexId}`)\n\t\t\t.set('x-auth', users[1].tokens[0].token)\n\t\t\t.send({\n\t\t\t\tcompleted: false,\n\t\t\t\ttext\n\t\t\t})\n\t\t\t.expect(200)\n\t\t\t.expect((res) => {\n\t\t\t\texpect(res.body.todo.text).toBe(text);;\n\t\t\t\texpect(res.body.todo.completed).toBe(false);\n\t\t\t\texpect(res.body.todo.completedAt).toBeFalsy();\n\t\t\t})\n\t\t\t.end(done);\n\t});\n});\n\ndescribe('GET /users/me', (done) => {\n\tit('should return user if authenticated', (done) => {\n\t\trequest(app)\n\t\t\t.get('/users/me')\n\t\t\t.set('x-auth', users[0].tokens[0].token)\n\t\t\t.expect(200)\n\t\t\t.expect((res) => {\n\t\t\t\texpect(res.body._id).toBe(users[0]._id.toHexString());\n\t\t\t\texpect(res.body.email).toBe(users[0].email);\n\t\t\t})\n\t\t\t.end(done);\n\t});\n\tit('should return 401 if not authenticated', (done) => {\n\t\trequest(app)\n\t\t\t.get('/users/me')\n\t\t\t.expect(401)\n\t\t\t.expect((res) => {\n\t\t\t\texpect(res.body).toEqual({});\n\t\t\t})\n\t\t\t.end(done);\n\t});\n});\n\ndescribe('POST /users', (done) => {\n\tit('should create a user', (done) => {\n\t\tconst email = 'example@example.com';\n\t\tconst password = '123mnb!';\n\t\trequest(app)\n\t\t\t.post('/users')\n\t\t\t.send({email, password})\n\t\t\t.expect(200)\n\t\t\t.expect((res) => {\n\t\t\t\texpect(res.headers['x-auth']).toBeTruthy();\n\t\t\t\texpect(res.body._id).toBeTruthy();\n\t\t\t\texpect(res.body.email).toBe(email);\n\t\t\t})\n\t\t\t.end((err) => {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn done(err);\n\t\t\t\t}\n\t\t\t\tUser.findOne({email}).then((user) => {\n\t\t\t\t\texpect(user).toBeTruthy();\n\t\t\t\t\texpect(user.password).not.toBe(password);\n\t\t\t\t\tdone();\n\t\t\t\t}).catch((e) => done(e));\n\t\t\t});\n\t});\n\tit('should return validation errors if request invalid', (done) => {\n\t\trequest(app)\n\t\t\t.post('/users')\n\t\t\t.send({\n\t\t\t\temail: 'ale',\n\t\t\t\tpassword: '123'\n\t\t\t})\n\t\t\t.expect(400)\n\t\t\t.end(done);\n\t});\n\n\tit('should not create user if email in use', (done) => {\n\t\trequest(app)\n\t\t\t.post('/users')\n\t\t\t.send({\n\t\t\t\temail: users[0].email,\n\t\t\t\tpassword: 'Password123!'\n\t\t\t})\n\t\t\t.expect(400)\n\t\t\t.end(done);\n\t});\n});\n\ndescribe('POST /users/login', () => {\n\tit('should login user and return auth token', (done) => {\n\t\trequest(app)\n\t\t\t.post('/users/login')\n\t\t\t.send({\n\t\t\t\temail: users[1].email,\n\t\t\t\tpassword: users[1].password\n\t\t\t})\n\t\t\t.expect(200)\n\t\t\t.expect((res) => {\n\t\t\t\texpect(res.headers['x-auth']).toBeTruthy();\n\t\t\t})\n\t\t\t.end((err, res) => {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn done(err);\n\t\t\t\t}\n\n\t\t\t\tUser.findById(users[1]._id).then((user) => {\n\t\t\t\t\texpect(user.toObject().tokens[1]).toMatchObject({\n\t\t\t\t\t\taccess: 'auth',\n\t\t\t\t\t\ttoken: res.headers['x-auth']\n\t\t\t\t\t});\n\t\t\t\t\tdone();\n\t\t\t\t}).catch((e) => done(e));\n\t\t\t});\n\t});\n\tit('should reject invalid login ', (done) => {\n\t\trequest(app)\n\t\t\t.post('/users/login')\n\t\t\t.send({\n\t\t\t\temail: users[1].email,\n\t\t\t\tpassword: users[1].password + '1'\n\t\t\t})\n\t\t\t.expect(400)\n\t\t\t.expect((res) => {\n\t\t\t\texpect(res.headers['x-auth']).toBeFalsy();\n\t\t\t})\n\t\t\t.end((err, res) => {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn done(err);\n\t\t\t\t}\n\n\t\t\t\tUser.findById(users[1]._id).then((user) => {\n\t\t\t\t\texpect(user.tokens.length).toBe(1);\n\t\t\t\t\tdone();\n\t\t\t\t}).catch((e) => done(e));\n\t\t\t});\n\t});\n});\n\ndescribe('DELETE /users/me/token', () => {\n\tit('should remove auth token on logout', (done) => {\n\t\trequest(app)\n\t\t\t.delete('/users/me/token')\n\t\t\t.set('x-auth', users[0].tokens[0].token)\n\t\t\t.expect(200)\n\t\t\t.end((err, res) => {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn done(err);\n\t\t\t\t}\n\n\t\t\t\tUser.findById(users[0]._id).then((user) => {\n\t\t\t\t\texpect(user.tokens.length).toBe(0);\n\t\t\t\t\tdone();\n\t\t\t\t}).catch((e) => done(e));\n\t\t\t});\n\t});\n});"],"file":"server.test.js"}