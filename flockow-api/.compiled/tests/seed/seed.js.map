{"version":3,"sources":["../../../src/tests/seed/seed.js"],"names":["require","ObjectID","jwt","Todo","User","userOneId","userTwoId","users","_id","email","password","tokens","access","token","sign","process","env","JWT_SECRET","toString","todos","text","_creator","completed","completedAt","populateTodos","done","remove","then","insertMany","populateUsers","userOne","save","userTwo","Promise","all","module","exports"],"mappings":";;eAAmBA,OAAO,CAAC,SAAD,C;IAAnBC,Q,YAAAA,Q;;AACP,IAAMC,GAAG,GAAGF,OAAO,CAAC,cAAD,CAAnB;;gBACeA,OAAO,CAAC,qBAAD,C;IAAfG,I,aAAAA,I;;gBACQH,OAAO,CAAC,qBAAD,C;IAAfI,I,aAAAA,I;;AAEP,IAAMC,SAAS,GAAG,IAAIJ,QAAJ,EAAlB;AACA,IAAMK,SAAS,GAAG,IAAIL,QAAJ,EAAlB;AAEA,IAAMM,KAAK,GAAG,CAAC;AACdC,EAAAA,GAAG,EAAEH,SADS;AAEdI,EAAAA,KAAK,EAAE,kBAFO;AAGdC,EAAAA,QAAQ,EAAE,aAHI;AAIdC,EAAAA,MAAM,EAAE,CAAC;AACRC,IAAAA,MAAM,EAAE,MADA;AAERC,IAAAA,KAAK,EAAEX,GAAG,CAACY,IAAJ,CAAS;AAACN,MAAAA,GAAG,EAAEH,SAAN;AAAiBO,MAAAA,MAAM,EAAE;AAAzB,KAAT,EAA2CG,OAAO,CAACC,GAAR,CAAYC,UAAvD,EAAmEC,QAAnE;AAFC,GAAD;AAJM,CAAD,EAQX;AACFV,EAAAA,GAAG,EAAEF,SADH;AAEFG,EAAAA,KAAK,EAAE,iBAFL;AAGFC,EAAAA,QAAQ,EAAE,aAHR;AAIFC,EAAAA,MAAM,EAAE,CAAC;AACRC,IAAAA,MAAM,EAAE,MADA;AAERC,IAAAA,KAAK,EAAEX,GAAG,CAACY,IAAJ,CAAS;AAACN,MAAAA,GAAG,EAAEF,SAAN;AAAiBM,MAAAA,MAAM,EAAE;AAAzB,KAAT,EAA2CG,OAAO,CAACC,GAAR,CAAYC,UAAvD,EAAmEC,QAAnE;AAFC,GAAD;AAJN,CARW,CAAd;AAkBA,IAAMC,KAAK,GAAG,CAAC;AACdX,EAAAA,GAAG,EAAE,IAAIP,QAAJ,EADS;AAEdmB,EAAAA,IAAI,EAAE,iBAFQ;AAGdC,EAAAA,QAAQ,EAAEhB;AAHI,CAAD,EAIX;AACFG,EAAAA,GAAG,EAAE,IAAIP,QAAJ,EADH;AAEFmB,EAAAA,IAAI,EAAE,kBAFJ;AAGFE,EAAAA,SAAS,EAAE,IAHT;AAIFC,EAAAA,WAAW,EAAE,GAJX;AAKFF,EAAAA,QAAQ,EAAEf;AALR,CAJW,CAAd;;AAYA,IAAMkB,aAAa,GAAG,SAAhBA,aAAgB,CAACC,IAAD,EAAU;AAC/BtB,EAAAA,IAAI,CAACuB,MAAL,CAAY,EAAZ,EAAgBC,IAAhB,CAAqB,YAAM;AAC1B,WAAOxB,IAAI,CAACyB,UAAL,CAAgBT,KAAhB,CAAP;AACA,GAFD,EAEGQ,IAFH,CAEQ,YAAM;AAACF,IAAAA,IAAI;AAAI,GAFvB;AAGA,CAJD;;AAMA,IAAMI,aAAa,GAAG,SAAhBA,aAAgB,CAACJ,IAAD,EAAU;AAC/BrB,EAAAA,IAAI,CAACsB,MAAL,CAAY,EAAZ,EAAgBC,IAAhB,CAAqB,YAAM;AAC1B,QAAMG,OAAO,GAAG,IAAI1B,IAAJ,CAASG,KAAK,CAAC,CAAD,CAAd,EAAmBwB,IAAnB,EAAhB;AACA,QAAMC,OAAO,GAAG,IAAI5B,IAAJ,CAASG,KAAK,CAAC,CAAD,CAAd,EAAmBwB,IAAnB,EAAhB;AAEA,WAAOE,OAAO,CAACC,GAAR,CAAY,CAACJ,OAAD,EAAUE,OAAV,CAAZ,CAAP;AACA,GALD,EAKGL,IALH,CAKQ;AAAA,WAAMF,IAAI,EAAV;AAAA,GALR;AAMA,CAPD;;AASAU,MAAM,CAACC,OAAP,GAAiB;AAACjB,EAAAA,KAAK,EAALA,KAAD;AAAQK,EAAAA,aAAa,EAAbA,aAAR;AAAuBjB,EAAAA,KAAK,EAALA,KAAvB;AAA8BsB,EAAAA,aAAa,EAAbA;AAA9B,CAAjB","sourcesContent":["const {ObjectID} = require('mongodb');\nconst jwt = require('jsonwebtoken');\nconst {Todo} = require('./../../models/todo');\nconst {User} = require('./../../models/user');\n\nconst userOneId = new ObjectID();\nconst userTwoId = new ObjectID();\n\nconst users = [{\n\t_id: userOneId,\n\temail: 'alex@example.com',\n\tpassword: 'userOnePass',\n\ttokens: [{\n\t\taccess: 'auth',\n\t\ttoken: jwt.sign({_id: userOneId, access: 'auth'}, process.env.JWT_SECRET).toString()\n\t}]\n}, {\n\t_id: userTwoId,\n\temail: 'jen@example.com',\n\tpassword: 'userTwoPass',\n\ttokens: [{\n\t\taccess: 'auth',\n\t\ttoken: jwt.sign({_id: userTwoId, access: 'auth'}, process.env.JWT_SECRET).toString()\n\t}]\n}];\n\nconst todos = [{\n\t_id: new ObjectID(),\n\ttext: 'First test todo',\n\t_creator: userOneId\n}, {\n\t_id: new ObjectID(),\n\ttext: 'Second test todo',\n\tcompleted: true,\n\tcompletedAt: 333,\n\t_creator: userTwoId\n}];\n\nconst populateTodos = (done) => {\n\tTodo.remove({}).then(() => {\n\t\treturn Todo.insertMany(todos);\n\t}).then(() => {done();});\n};\n\nconst populateUsers = (done) => {\n\tUser.remove({}).then(() => {\n\t\tconst userOne = new User(users[0]).save();\n\t\tconst userTwo = new User(users[1]).save();\n\n\t\treturn Promise.all([userOne, userTwo]);\n\t}).then(() => done());\n};\n\nmodule.exports = {todos, populateTodos, users, populateUsers};"],"file":"seed.js"}