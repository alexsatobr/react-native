{"version":3,"sources":["../src/server.js"],"names":["app","port","process","env","PORT","use","bodyParser","json","post","req","res","desafios","params","console","log","num","Desafios","fase_1","body","desafio","fase_2","save","then","doc","send","e","status","authenticate","todo","Todo","text","_creator","user","_id","get","find","todos","id","ObjectID","isValid","findOne","catch","delete","findOneAndRemove","patch","_","pick","isBoolean","completed","completedAt","Date","getTime","findOneAndUpdate","$set","new","User","generateAuthToken","token","header","findByCredentials","email","password","removeToken","listen","module","exports"],"mappings":"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","sourcesContent":["import './config/config';\n\nimport _ from 'lodash';\nimport express from 'express';\nimport bodyParser from 'body-parser';\nimport {ObjectID} from 'mongodb';\n\nimport {mongoose} from './db/mongoose';\nimport {Todo} from './models/todo';\nimport {User} from './models/user';\nimport {Desafios} from './models/desafios';\nimport {authenticate} from './middleware/authenticate';\n\nimport 'babel-polyfill';\n\nconst app = express();\nconst port = process.env.PORT || 3000;\n\napp.use(bodyParser.json());\n\napp.post('/desafios_gerais/list/:num/', (req, res) => {\n\tlet desafios;\n\tif (req.params === null) {\n\t\tconsole.log('no params');\n\t}\n\tif (req.params.num === '1') {\n\t\tdesafios = new Desafios({\n\t\t\tfase_1: req.body.desafio\n\t\t});\n\t} else if (req.params.num === '2') {\n\t\tdesafios = new Desafios({\n\t\t\tfase_2: req.body.desafio\n\t\t});\n\t}\n\tdesafios.save().then((doc) => {\n\t\tres.send(doc);\n\t}, (e) => {\n\t\tres.status(400).send(e);\n\t});\n});\n\n\napp.post('/todos', authenticate, (req, res) => {\n\tconst todo = new Todo({\n\t\ttext: req.body.text,\n\t\t_creator: req.user._id\n\t});\n\ttodo.save().then((doc) => {\n\t\tres.send(doc);\n\t}, (e) => {\n\t\tres.status(400).send(e);\n\t});\n});\n\napp.get('/todos', authenticate, (req, res) => {\n\tTodo.find({\n\t\t_creator: req.user._id\n\t}).then((todos) => {\n\t\tres.send({todos});\n\t}, (e) => {\n\t\tres.status(400).send(e);\n\t});\n});\n\napp.get('/todos/:id', authenticate, (req, res) => {\n\tconst id = req.params.id;\n\tif (!ObjectID.isValid(id)){\n\t\treturn res.status(404).send();\n\t}\n\n\tTodo.findOne({\n\t\t_id: id,\n\t\t_creator: req.user._id\n\t}).then((todo) => {\n\t\tif (!todo) {\n\t\t\treturn res.status(404).send();\n\t\t}\n\t\tres.send({todo});\n\t}).catch((e) => {\n\t\tres.status(400).send();\n\t});\n});\n\napp.delete('/todos/:id', authenticate, async (req, res) => {\n\tconst id = req.params.id;\n\tif (!ObjectID.isValid(id)){\n\t\treturn res.status(404).send();\n\t}\n\n\ttry {\n\t\tconst todo = await Todo.findOneAndRemove({\n\t\t\t_id: id,\n\t\t\t_creator: req.user._id\n\t\t});\n\t\tif (!todo) {\n\t\t\treturn res.status(404).send();\n\t\t}\n\t\tres.send({todo});\n\t} catch (e) {\n\t\tres.status(400).send();\n\t}\n});\n\napp.patch('/todos/:id',  authenticate, (req, res) => {\n\tconst id = req.params.id;\n\tlet body = _.pick(req.body, ['text', 'completed']);\n\n\tif (!ObjectID.isValid(id)){\n\t\treturn res.status(404).send();\n\t}\n\tif (_.isBoolean(body.completed) && body.completed) {\n\t\tbody.completedAt = new Date().getTime();\n\t} else {\n\t\tbody.completed = false;\n\t\tbody.completedAt = null;\n\t}\n\n\tTodo.findOneAndUpdate({\n\t\t_id: id,\n\t\t_creator: req.user._id\n\t}, {$set: body}, {new: true}).then((todo) => {\n\t\tif (!todo) {\n\t\t\treturn res.status(404).send();\n\t\t}\n\t\tres.send({todo});\n\t}).catch((e) => {\n\t\tres.status(404).send();\n\t});\n});\n\napp.post('/users', async (req, res) => {\n\ttry {\n\t\tconst body = _.pick(req.body, ['email', 'password']);\n\t\tconst user = new User(body);\n\t\tawait user.save();\n\t\tconst token = await user.generateAuthToken();\n\t\tres.header('x-auth', token).send(user);\n\t} catch(e) {\n\t\tres.status(400).send(e);\n\t}\n});\n\napp.get('/users/me', authenticate, async (req, res) => {\n\t// try {\n\t// \tconst id = '5bb2ddb4c6fa840a7326a5bb';\n\t// \tconst td = await Todo.findOne({\n\t// \t\t_id: id,\n\t// \t\t_creator: '5bb2dc88c6fa840a7326a5b9'\n\t// \t}).then((todo) => {\n\t// \t\tif (!todo) {\n\t// \t\t\treturn res.status(404).send();\n\t// \t\t}\n\t// \t\tres.send({todo});\n\t// \t}).catch((e) => {\n\t// \t\tconsole.log(e);\n\t// \t\tres.status(400).send();\n\t// \t});\n\t\t\n\t// \tres.send(td);\n\t// } catch(e) {\n\t// \tconsole.log(e);\n\t// }\n\tres.send(req.user);\n});\n\napp.post('/users/login', async (req, res) => {\n\ttry {\n\t\tconst body = _.pick(req.body, ['email', 'password']);\n\t\tconst user =  await User.findByCredentials(body.email, body.password);\n\t\tconst token = await user.generateAuthToken();\n\t\tres.header('x-auth', token).send(user);\n\t} catch (e) {\n\t\tres.status(400).send();\n\t}\n});\n\napp.delete('/users/me/token', authenticate, async (req, res) => {\n\ttry {\n\t\tawait req.user.removeToken(req.token);\n\t\tres.status(200).send();\n\t} catch (e) {\n\t\tres.status(400).send();\n\t}\n});\n\napp.listen(port, () => {\n\tconsole.log(`Started on port ${port}`);\n});\n\nmodule.exports = {app};"],"file":"server.js"}